#!/bin/bash
set -u -e -C;
shopt -s nullglob;

function err { echo "$@" >&2; }
function warn { echo "$@" >&2; }

function ask_yN {
    local answer='';
    read -n 1 -s -p "$* [yN]" answer;
    if test "${answer}" = y; then
        echo yes;
        return 0;
    fi;
    echo no;
    return 1;
}

nl="${1:?missing arg1: min number of nodes}";
nu="${2:?missing arg2: max number of nodes}";
db="${3:?missing arg3: min balance}";

make testMatcher;
dir="log-${nl}-${nu}-${db}";
mkdir -p "${dir}/g";
mkdir -p "${dir}/m";
mkdir -p "${dir}/t";
log="${dir}/log";

if test -r "${log}"; then
    count="$(wc -l <"${log}")";
else
    count=0;
fi;

cat <<EOF | tee -a "${log}";
# Graph               | Mine                 | FGL             |
# no  lnc  rnc     ec |   mc       t     rss |       t     rss | ok
EOF

until read -t0.01 -n1 -s; do
    count="$((count + 1))";
    test "$count" -gt 5000 && exit 0;
    
    printf "%4i %4i %4i %6i | " "${count}" $(./testMatcher mkgraph "${nl}" "${nu}" "${db}" "${dir}/g/${count}");

    if /usr/bin/time -o"${dir}/t/t1" -f'%e %M' timelimit -q -s9 -t30 ./testMatcher mine "${dir}/g/${count}" "${dir}/m/${count}" >| "${dir}/t/c1"; then
        c1="$(<"${dir}/t/c1")";
        printf "%4i %7.3f %7i | " "${c1}" $(<"${dir}/t/t1");
        test "${c1}" -eq "$(wc -l <"${dir}/m/${count}")" || err "mismatch saved matching";
    else
        printf "dnf\n";
        continue;
    fi;

    if false && test "$nu" -lt 500; then
        if /usr/bin/time -o"${dir}/t/t2" -f'%e %M' timelimit -q -s9 -t30 ./testMatcher fgl "${dir}/g/${count}" >| "${dir}/t/c2"; then
            c2="$(<"${dir}/t/c2")";
            printf "%7.3f %7i | " $(<"${dir}/t/t2");
            test "${c1}" -eq "${c2}" || err "mismatch max flow";
        else
            printf "dnf\n";
            continue;
        fi;
    fi;
    
    printf "ok\n";
    
done 2>&1 | tee -a "${log}";
