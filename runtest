#!/bin/bash
set -u -e -C;
shopt -s nullglob;

function err { echo "$@" >&2; }
function warn { echo "$@" >&2; }

function ask_yN {
    local answer='';
    read -n 1 -s -p "$* [yN]" answer;
    if test "${answer}" = y; then
        echo yes;
        return 0;
    fi;
    echo no;
    return 1;
}


algo="${1:?which testMatcher algorithm to run}";
flag="${2:?which compile flag}"
dir="${3:?need graph directory}";

log="log_${algo}_${flag}_$(basename "${dir}")";

mkdir -p "${TMPDIR:-/tmp}/runtest";
tmp="$(mktemp -d --tmpdir runtest/XXXXXXXXXX)";

cat > "${log}" <<EOF
# graph     lc rc ec mc     mc time mem
EOF

# kill any process after 30 seconds of *cpu time*
ulimit -t 30;

tail -n+2 "${dir}/log" | while read graph lc rc ec m; do

    printf "%4i     %4i %4i %6i %6i     " "${graph}" "${lc}" "${rc}" "${ec}" "${m}";
    if
        sem computations -x -- \
            /usr/bin/time -o"${tmp}/t1" -f'%U %M' \
            "./testMatcher_${flag}" "${algo}" "${dir}/${graph}" \
            >| "${tmp}/c1";
    then
        c1="$(<"${tmp}/c1")";
        printf "%4i %7.3f %7i     " "${c1}" $(<"${tmp}/t1");
        test "${c1}" -eq "${m}" || err "mismatch saved matching";
    else
        printf "%4i %7.3f %7i     dnf\n" -1 -1 -1;
        continue;
    fi;
    printf "ok\n";

done 2>&1 | tee -a "${log}";
