#!/bin/bash
set -u -e -C;
shopt -s nullglob;

function err { echo "$@" >&2; exit 1; }
function warn { echo "$@" >&2; }
function info { echo "$@" >&2; }

function ask_yN {
    local answer='';
    read -n 1 -s -p "$* [yN]" answer;
    if test "${answer}" = y; then
        echo yes;
        return 0;
    fi;
    echo no;
    return 1;
}


dir='./tmp';
cpus="$(nproc)"

function req {
    test -x "$1" || err "missing: $1";
}

req dist/build/fglMatcher/fglMatcher
req dist/build/matcher/matcher
req dist/build/mkGraphs/mkGraphs

test -d "$dir" || dist/build/mkGraphs/mkGraphs "$cpus" "$dir" 20 {10..1000..20} >&2;


# kill any process after 300 seconds of *cpu time*
ulimit -t 300;

for g in "$dir"/*.txt; do

    b="$(basename "$g" .txt)";

    for m in fglMatcher matcher; do

        test -e "$dir/$m.$b.out" && continue;
        
        info "Running $m on $g";
        
        timeout 30 /usr/bin/time \
            -o "$dir/$m.$b.time" \
            -f "%U %M" \
            "dist/build/$m/$m" "$g" \
            >| "$dir/$m.$b.out" || rm -f "$dir/$m.$b.time" &

        while test "$(jobs | grep -c Running)" -ge "$cpus"; do
            info "Waiting for CPU";
            wait -n;
        done;

    done;
done;

wait && info "Waiting for all jobs";

info 'Done.  Comparing all outputs...';

for i in "$dir"/*.txt; do
    cmp "$dir"/{matcher,fglMatcher}.$(basename "$i" .txt).out || true;
done;

info 'Aggregating timing...';

for m in fglMatcher matcher; do
    for f in "${dir}/${m}."*'.time'; do
        dat="$(sed -r 's:[^.]*\.([0-9]+)-([0-9]+)n-([0-9]+)e-v([0-9]+):\1 \2 \3 \4:' <<< "$(basename "$f" .time)")";

        echo "${dat} $(< $f)" >> "${dir}/timings.${m}";
    done;
    
done;

info "Done: ${dir}/timings.*";
