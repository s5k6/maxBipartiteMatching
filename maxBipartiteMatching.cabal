name: maxBipartiteMatching

version:             0.1.0.0

synopsis: Maximum cardinality bipartite matching

description: Find a maximum cardinality matching on a bipartite graph,
             using an augmenting path algorithm.  More efficient than
             using MaxFlow from FGL with constant weight and additional
             source and sink nodes.

homepage: http://stefan-klinger.de/

license: OtherLicense

license-file: LICENSE

author: Stefan Klinger

category: Data

build-type: Simple

cabal-version: >=1.8


library
  exposed-modules: Data.Graph.MaxBipartiteMatching
  hs-source-dirs: src
  build-depends: base, containers
  ghc-options: -Wall -Wno-name-shadowing -Wno-unused-matches -Werror

executable matcher
  main-is: Matcher.lhs
  hs-source-dirs: src
  ghc-options: -Wall -Wno-name-shadowing -Wno-unused-matches -Werror
  build-depends: base, containers
                                  
test-suite quickcheck
  type: exitcode-stdio-1.0
  main-is: quickcheck.lhs
  ghc-options: -Wall -Wno-name-shadowing -Wno-unused-matches -Werror
  hs-source-dirs: src, tests
  build-depends: base, containers, QuickCheck
  extensions: EmptyDataDecls

benchmark mkGraphs
  type: exitcode-stdio-1.0
  main-is: mkGraphs.lhs
  ghc-options: -Wall -Wno-name-shadowing -Wno-unused-matches -Werror -threaded
  hs-source-dirs: src, tests
  build-depends: base, containers, QuickCheck, parallel-io, directory
  extensions: EmptyDataDecls
